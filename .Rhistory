b2 ~ dnorm( -0.045 , 0.0000005) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 1) ,
b1 ~ dnorm( 1.8 , 0.000001 ) ,
b2 ~ dnorm( -0.045 , 0.0000005) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 1) ,
b1 ~ dnorm( 1.8 , 0.000001 ) ,
b2 ~ dnorm( -0.043 , 0.0000005) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 1) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.0 43) ,
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 1) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.043) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 15) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.043) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 15) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.02) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 1000
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 15) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.02) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 30
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight) , ylim=c(60,180) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 15) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.02) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 30
prior <- extract.prior( m4.5, N)
plot(NULL,
xlab="weight" , ylab="height" )
data(Howell1)
d <- Howell1
d$weight_s <- ( d$weight - mean(d$weight) )/sd(d$weight)
d$weight_s2 <- d$weight_s^2
m4.5 <- quap(alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 ,
a ~ dnorm( 150 , 15) ,
b1 ~ dnorm( 1.8 , 0.1 ) ,
b2 ~ dnorm( -0.043 , 0.02) ,
sigma ~ dunif( 0 , 50 )
), data=d)
#Plotting prior predictive distribution
N <- 30
prior <- extract.prior( m4.5, N)
plot(NULL , xlim=range(d$weight), ylim=range(d$height) ,
xlab="weight" , ylab="height" )
xbar <- mean(d$weight)
for ( i in 1:N ) curve( prior$a[i] +
prior$b1[i]*(x - xbar) +
prior$b2[i]*(x - xbar)^2,
from=min(d$weight) , to=max(d$weight),
add=TRUE,
col=col.alpha("black",0.2) )
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 )
mu <- link( m4.5 , data=pred_dat )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
sim.height <- sim( m4.5 , data=pred_dat )
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
data("Howell1")
d <- Howell1
height_m <- mean(d$height)
weight_log <- log(d$weight)
weight_log_m <- mean(weight_log)
plot(weight_log, d$height, ylab="Log weight", xlab="Height", col=col.alpha(rangi2,0.5))
data("Howell1")
d <- Howell1
height_m <- mean(d$height)
weight_log <- log(d$weight)
weight_log_m <- mean(weight_log)
plot(weight_log, d$height, ylab="Height", xlab="Log weight", col=col.alpha(rangi2,0.5))
weight_log_s <- (weight_log - weight_log_m)/sd(weight_log)
weight_log_s2 <- (weight_log_s)^2
weight_log_s3 <- (weight_log_s)^3
weight_log2 <- (weight_log)^2
weight_log3 <- (weight_log)^3
weight_log4 <- (weight_log)^4
m_polynomial <- quap(alist(
height ~ dnorm(mu, sigma),
mu <- a + b1 * weight_log + b2 * weight_log2 + b3 * weight_log3 + b4 * weight_log4,
a ~ dnorm(170, 20),
b1 ~ dlnorm(0,1),
b2 ~ dnorm(0, 1),
b3 ~ dnorm(0, 1),
b4 ~ dnorm(0, 1),
sigma ~ dunif(0,50)
), data = d)
# N <- 30
#
# prior <- extract.prior( m_polynomial, N)
# plot( NULL , xlim=range(d$weight) , ylim=c(-100,400) ,
# xlab="weight log" , ylab="height")
# xbar <- mean(d$weight)
# for ( i in 1:N ) curve( prior$a[i] +
#                          prior$b1[i]*(x - xbar) +
#                          prior$b2[i]*(x - xbar)^2 +
#                          prior$b3[i]*(x - xbar)^3 +
#                           prior$b3[i]*(x - xbar)^3,
#  from=min(d$weight) , to=max(d$weight),
#  add=TRUE,
#  col=col.alpha("black",0.5) )
post <- extract.samples(m_polynomial)
plot(weight_log, d$height, ylab="Height", xlab="Log Weight", col=col.alpha(rangi2,0.5))
weight.seq <- seq( from=min(weight_log) , to=max(weight_log) , length.out=30 )
pred_dat <- list( weight_log=weight.seq,
weight_log2=weight.seq^2,
weight_log3= weight.seq^3,
weight_log4= weight.seq^4)
mu <- link(m_polynomial, data = pred_dat)
mu.mean <- apply( mu , 2 , mean )
lines(weight.seq, mu.mean)
weight_log_s <- (weight_log - weight_log_m)/sd(weight_log)
weight_log_s2 <- (weight_log_s)^2
weight_log_s3 <- (weight_log_s)^3
weight_log2 <- (weight_log)^2
weight_log3 <- (weight_log)^3
weight_log4 <- (weight_log)^4
m_polynomial <- quap(alist(
height ~ dnorm(mu, sigma),
mu <- a + b1 * weight_log + b2 * weight_log2 + b3 * weight_log3 + b4 * weight_log4,
a ~ dnorm(170, 20),
b1 ~ dlnorm(0,1),
b2 ~ dnorm(0, 1),
b3 ~ dnorm(0, 1),
b4 ~ dnorm(0, 1),
sigma ~ dunif(0,50)
), data = d)
# N <- 30
#
# prior <- extract.prior( m_polynomial, N)
# plot( NULL , xlim=range(d$weight) , ylim=c(-100,400) ,
# xlab="weight log" , ylab="height")
# xbar <- mean(d$weight)
# for ( i in 1:N ) curve( prior$a[i] +
#                          prior$b1[i]*(x - xbar) +
#                          prior$b2[i]*(x - xbar)^2 +
#                          prior$b3[i]*(x - xbar)^3 +
#                           prior$b3[i]*(x - xbar)^3,
#  from=min(d$weight) , to=max(d$weight),
#  add=TRUE,
#  col=col.alpha("black",0.5) )
post <- extract.samples(m_polynomial)
plot(weight_log, d$height, ylab="Height", xlab="Log Weight", col=col.alpha(rangi2,0.5))
weight.seq <- seq( from=min(weight_log) , to=max(weight_log) , length.out=30 )
pred_dat <- list( weight_log=weight.seq,
weight_log2=weight.seq^2,
weight_log3= weight.seq^3,
weight_log4= weight.seq^4)
mu <- link(m_polynomial, data = pred_dat)
mu.mean <- apply( mu , 2 , mean )
lines(weight.seq, mu.mean)
install.packages("blogdown")
library(blogdown)
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
data(Howell1)
plot(Howell1)
plot(Howell1)
plot(Howell1)
plot(Howell1)
plot(hieght, weight, data=Howell1)
plot(height, weight, data=Howell1)
?plot
attach(Howell1)
plot(height, weight)
attach(Howell1)
plot(height, weight)
data <- Howell1
attach(data)
plot(height, weight)
attach(Howell1)
plot(height, weight)
attach(Howell1)
plot(height, weight)
View(Howell1)
plot(Howell1$height, log(Howell1$weight))
attach(Howell1)
plot(height, weight)
plot(Howell1$height, log(Howell1$weight), xlab="Height", ylab="Log weight")
x <- 5 + 10
print(x)
y <- 17 + 3
print(y)
attach(Howell1)
plot(height, weight)
blogdown::build_site()
setwd("~/OneDrive/Documents/1jamesthompson1.github.io/_posts")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
setwd("C:/Users/James/OneDrive/Documents/OneDrive/Documents/1jamesthompson1.github.io")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
build_site()
blogdown::install_hugo()
blogdown::serve_site()
jekyll
jekyll -v
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
bundle exec blogdown::build_site()
bundle exec
library(rethinking)
data(Howell1)
build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
attach(Howell1)
plot(height, weight)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
?sprintf
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
library(rethinking)
data(Howell1)
build_site()\
build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
x <- 5 + 14
print(x)
print(x)
x <- 5 + 14
blogdown::build_site()
blogdown::build_site()
?knit()
