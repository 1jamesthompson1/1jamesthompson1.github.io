---
title: "A good automation story"
date: '2025-03-13'
categories: ["category"]
---

I recently got back from Europe after a couple of months of Snowboarding and competing at some Freeride World Tour Qualifier events. Fun time but crashed at almost all compeitions so didnt go well from that aspect, however my Europe story is for another day. Today I want to talk about a good automation experience. I am sure any person who fiddles with code is well versed and had first hand experience of what ill call the illusion of automation.

![Retrieved from: https://xkcd.com/1319/](automation_xkcd_1319)

It is simply such a seductive idea. You have this task, this problem that you have to solve. Either something that takes a non-trivial amount of time that you do regularly or one large task that you think to yourself "gosh there must be better way of doing it". I know that I have this voice in the back of my head, always, all the time speaking up with its opinion about any problem it hears about. Yet sadly in my measly 22 years on this Earth it has come to be humbled. Whenever Mr Automation trys to speak up a Mr Realist has something to say with a voice not too dissimilar from [Melvin](https://en.wikipedia.org/wiki/Marvin_the_Paranoid_Android) retorts "Its more complicated than that". Its a painful truth but Mr Realist is quite often correct because well hes realistic. The real world is complicated, software is complicated and problems are complicated. The little day dream your head just made up about this process/system/code that can solve this tedious slow problem has conveniently skipped over all that complication that it just couldn't even imagine. However I am always a optimist and so today I have a positive example to give Mr Automation a spring in his step and help maintains its confidence.

Back to where I started... I had arrived back from Europe and within a day a Family member contacted me asking for help with an accounting problem. Not quite an accounting problem but a problem with performing a calculation. On hearing this request I was immediately intrigued. Problems that people have that are new to me and I have a chance of helping them are right up my alleyway. On making it around to their house to talk over their problem I immediately got the gist. Someone needed to do a non trivial computation and their only method was to use a Excel spreadsheet they last used 20 years ago. They had tried using the spreadsheet but it wasn't quite working the way they remembered it. After having a poke around it turned out to be a simple problem to fix and was pretty much just user error. Quick back of the napkins calculations suggested that it was going to take about 3 days work to do all of the calculations. Mr Automation was going ballistic! I'm sure when this spreadsheet was built last century it was good enough. But times have changed and having to manually duplicate a spreadsheet fill out all the dates and then press a button is all a bit too time consuming for my lazy self. Knowing that I could spend up to 10 hours playing around and still make a time saving of 14 hours empowered me to offer to head home work on another solution and get back to them.

I get home and I had the spreadsheet which gave me some example calculations which I had to replicate. We didn't quite understand the reasoning for the calculations but just the idea was to treat it as the golden rule, the final word. I knew building something with python was going to be the way to go. The first goal for me was o simply replicate these calculations so that I knew it could be solved. A couple hours in and all was well and I was basically complete I had to add te final column that was simply adding other columns together. However I made the grave mistake of misreading the formula in the column, meaning I thought it depended on itself. It completely confounded me and I spent too long trying to figure out the spreadsheet could even handle this self references. I proved that it was a divergent function so I was even more confused. Finally I did get back to reading it currently and everything was all good. I went to sleep that night excited but also concerned as I wasn't quite sure how I could give access to the tool in a completely fool proof way. t hit me in the middle of the night that this was a job for gradio and hugging face spaces. COnverting it from a notebook to a gradio app was relatively smooth. Before I knew it the website was live even with CD setup!

Another weekend visit to help set them up with the app so they felt comfortable and everything is good as gold! Success! I spent about 8 hours to save them 16 hours, which is a win in my books. It always makes me feel good when I can hel someone with computers. Particularly when it wasn't working and being as useful as it could be. I think people of all walks of life can forgot that actually computers are here to help us.

Something that really struck me during this process (particularly while talking with an accountant) was how free everything is. In the financial world everyone want money for everything! THey asked if anyone could access this website and do I charge for it. It hadn't even crossed my mind to charge people for access to this little web tool. I could only build something of value so quickly because of the vast amount of free software and code that people just give away. It's amazing! My little programme alone uses 86 python packages. Each one of these packages are given out freely, maintained mostly by volunteers and make on money for anyone. Its a wild wild idea. People outside the software world just know how much programmers can get paid and what not. Which is totally true as some people in the IT, informatics world certainly can be "overpaid". But behind the curtains there just so much for free. Everywhere!






